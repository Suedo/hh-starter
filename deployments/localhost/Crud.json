{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "createUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "deleteUserById",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "findUserById",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "updateUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "users",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x4bc8814ec2968011ef01b76b644aec88c1e528e395be15909832409839684410",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "653294",
    "logsBloom": "0x
    "blockHash": "0xb3b74edc3257d14b146fbc88116ef601de51bb976818939967306160b23cc382",
    "transactionHash": "0x4bc8814ec2968011ef01b76b644aec88c1e528e395be15909832409839684410",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "653294",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "c8857510a35abbcba4c73f132d62d305",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"createUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"deleteUserById\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"findUserById\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"updateUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"users\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Crud.sol\":\"Crud\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Crud.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.9;\\n\\ncontract Crud {\\n    struct User {\\n        uint256 id;\\n        string name;\\n    }\\n    User[] public users;\\n\\n    uint256 public nextId = 1;\\n\\n    function createUser(string memory name) public {\\n        users.push(User(nextId, name));\\n        nextId++;\\n    }\\n\\n    // this return signature will allow us to use DeStructuring at the consumer side\\n    function findUserById(uint256 id) public view returns (uint256, string memory) {\\n        uint256 i = findUserIndex(id);\\n        return (users[i].id, users[i].name);\\n    }\\n\\n    function updateUser(uint256 id, string memory name) public {\\n        uint256 i = findUserIndex(id);\\n        users[i].name = name;\\n    }\\n\\n    function deleteUserById(uint256 id) public {\\n        uint256 i = findUserIndex(id);\\n        delete users[i];\\n    }\\n\\n    function findUserIndex(uint256 id) internal view returns (uint256) {\\n        for (uint256 i = 0; i < users.length; i++) {\\n            if (users[i].id == id) return i;\\n        }\\n        revert(\\\"User does not exist\\\");\\n    }\\n}\\n\",\"keccak256\":\"0xd213578d913ba3d39abbe5737476ba6d632c360ec911f12b5fc4935ebbd1f12a\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x60806040526001805534801561001457600080fd5b50610a7f806100246000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806332bdc42c14610067578063365b98b214610083578063507ffba5146100b457806361b8ce8c146100d0578063d85340e7146100ee578063ec36fcc11461010a575b600080fd5b610081600480360381019061007c91906105db565b61013b565b005b61009d600480360381019061009891906105db565b610189565b6040516100ab9291906106b0565b60405180910390f35b6100ce60048036038101906100c99190610815565b610245565b005b6100d86102cb565b6040516100e5919061085e565b60405180910390f35b61010860048036038101906101039190610879565b6102d1565b005b610124600480360381019061011f91906105db565b61031d565b6040516101329291906106b0565b60405180910390f35b60006101468261040f565b90506000818154811061015c5761015b6108d5565b5b906000526020600020906002020160008082016000905560018201600061018391906104ae565b50505050565b6000818154811061019957600080fd5b90600052602060002090600202016000915090508060000154908060010180546101c290610933565b80601f01602080910402602001604051908101604052809291908181526020018280546101ee90610933565b801561023b5780601f106102105761010080835404028352916020019161023b565b820191906000526020600020905b81548152906001019060200180831161021e57829003601f168201915b5050505050905082565b6000604051806040016040528060015481526020018381525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010190805190602001906102ad9291906104ee565b505050600160008154809291906102c390610994565b919050555050565b60015481565b60006102dc8361040f565b905081600082815481106102f3576102f26108d5565b5b906000526020600020906002020160010190805190602001906103179291906104ee565b50505050565b60006060600061032c8461040f565b905060008181548110610342576103416108d5565b5b90600052602060002090600202016000015460008281548110610368576103676108d5565b5b906000526020600020906002020160010180805461038590610933565b80601f01602080910402602001604051908101604052809291908181526020018280546103b190610933565b80156103fe5780601f106103d3576101008083540402835291602001916103fe565b820191906000526020600020905b8154815290600101906020018083116103e157829003601f168201915b505050505090509250925050915091565b600080600090505b60008054905081101561046d578260008281548110610439576104386108d5565b5b906000526020600020906002020160000154141561045a57809150506104a9565b808061046590610994565b915050610417565b506040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a090610a29565b60405180910390fd5b919050565b5080546104ba90610933565b6000825580601f106104cc57506104eb565b601f0160209004906000526020600020908101906104ea9190610574565b5b50565b8280546104fa90610933565b90600052602060002090601f01602090048101928261051c5760008555610563565b82601f1061053557805160ff1916838001178555610563565b82800160010185558215610563579182015b82811115610562578251825591602001919060010190610547565b5b5090506105709190610574565b5090565b5b8082111561058d576000816000905550600101610575565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6105b8816105a5565b81146105c357600080fd5b50565b6000813590506105d5816105af565b92915050565b6000602082840312156105f1576105f061059b565b5b60006105ff848285016105c6565b91505092915050565b610611816105a5565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610651578082015181840152602081019050610636565b83811115610660576000848401525b50505050565b6000601f19601f8301169050919050565b600061068282610617565b61068c8185610622565b935061069c818560208601610633565b6106a581610666565b840191505092915050565b60006040820190506106c56000830185610608565b81810360208301526106d78184610677565b90509392505050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61072282610666565b810181811067ffffffffffffffff82111715610741576107406106ea565b5b80604052505050565b6000610754610591565b90506107608282610719565b919050565b600067ffffffffffffffff8211156107805761077f6106ea565b5b61078982610666565b9050602081019050919050565b82818337600083830152505050565b60006107b86107b384610765565b61074a565b9050828152602081018484840111156107d4576107d36106e5565b5b6107df848285610796565b509392505050565b600082601f8301126107fc576107fb6106e0565b5b813561080c8482602086016107a5565b91505092915050565b60006020828403121561082b5761082a61059b565b5b600082013567ffffffffffffffff811115610849576108486105a0565b5b610855848285016107e7565b91505092915050565b60006020820190506108736000830184610608565b92915050565b600080604083850312156108905761088f61059b565b5b600061089e858286016105c6565b925050602083013567ffffffffffffffff8111156108bf576108be6105a0565b5b6108cb858286016107e7565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061094b57607f821691505b6020821081141561095f5761095e610904565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061099f826105a5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156109d2576109d1610965565b5b600182019050919050565b7f5573657220646f6573206e6f7420657869737400000000000000000000000000600082015250565b6000610a13601383610622565b9150610a1e826109dd565b602082019050919050565b60006020820190508181036000830152610a4281610a06565b905091905056fea26469706673582212203f8aacc9bd942cba70fc3afcd83447d4101cc5df551e380af0fe6f9ff601536f64736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c806332bdc42c14610067578063365b98b214610083578063507ffba5146100b457806361b8ce8c146100d0578063d85340e7146100ee578063ec36fcc11461010a575b600080fd5b610081600480360381019061007c91906105db565b61013b565b005b61009d600480360381019061009891906105db565b610189565b6040516100ab9291906106b0565b60405180910390f35b6100ce60048036038101906100c99190610815565b610245565b005b6100d86102cb565b6040516100e5919061085e565b60405180910390f35b61010860048036038101906101039190610879565b6102d1565b005b610124600480360381019061011f91906105db565b61031d565b6040516101329291906106b0565b60405180910390f35b60006101468261040f565b90506000818154811061015c5761015b6108d5565b5b906000526020600020906002020160008082016000905560018201600061018391906104ae565b50505050565b6000818154811061019957600080fd5b90600052602060002090600202016000915090508060000154908060010180546101c290610933565b80601f01602080910402602001604051908101604052809291908181526020018280546101ee90610933565b801561023b5780601f106102105761010080835404028352916020019161023b565b820191906000526020600020905b81548152906001019060200180831161021e57829003601f168201915b5050505050905082565b6000604051806040016040528060015481526020018381525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010190805190602001906102ad9291906104ee565b505050600160008154809291906102c390610994565b919050555050565b60015481565b60006102dc8361040f565b905081600082815481106102f3576102f26108d5565b5b906000526020600020906002020160010190805190602001906103179291906104ee565b50505050565b60006060600061032c8461040f565b905060008181548110610342576103416108d5565b5b90600052602060002090600202016000015460008281548110610368576103676108d5565b5b906000526020600020906002020160010180805461038590610933565b80601f01602080910402602001604051908101604052809291908181526020018280546103b190610933565b80156103fe5780601f106103d3576101008083540402835291602001916103fe565b820191906000526020600020905b8154815290600101906020018083116103e157829003601f168201915b505050505090509250925050915091565b600080600090505b60008054905081101561046d578260008281548110610439576104386108d5565b5b906000526020600020906002020160000154141561045a57809150506104a9565b808061046590610994565b915050610417565b506040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a090610a29565b60405180910390fd5b919050565b5080546104ba90610933565b6000825580601f106104cc57506104eb565b601f0160209004906000526020600020908101906104ea9190610574565b5b50565b8280546104fa90610933565b90600052602060002090601f01602090048101928261051c5760008555610563565b82601f1061053557805160ff1916838001178555610563565b82800160010185558215610563579182015b82811115610562578251825591602001919060010190610547565b5b5090506105709190610574565b5090565b5b8082111561058d576000816000905550600101610575565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6105b8816105a5565b81146105c357600080fd5b50565b6000813590506105d5816105af565b92915050565b6000602082840312156105f1576105f061059b565b5b60006105ff848285016105c6565b91505092915050565b610611816105a5565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610651578082015181840152602081019050610636565b83811115610660576000848401525b50505050565b6000601f19601f8301169050919050565b600061068282610617565b61068c8185610622565b935061069c818560208601610633565b6106a581610666565b840191505092915050565b60006040820190506106c56000830185610608565b81810360208301526106d78184610677565b90509392505050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61072282610666565b810181811067ffffffffffffffff82111715610741576107406106ea565b5b80604052505050565b6000610754610591565b90506107608282610719565b919050565b600067ffffffffffffffff8211156107805761077f6106ea565b5b61078982610666565b9050602081019050919050565b82818337600083830152505050565b60006107b86107b384610765565b61074a565b9050828152602081018484840111156107d4576107d36106e5565b5b6107df848285610796565b509392505050565b600082601f8301126107fc576107fb6106e0565b5b813561080c8482602086016107a5565b91505092915050565b60006020828403121561082b5761082a61059b565b5b600082013567ffffffffffffffff811115610849576108486105a0565b5b610855848285016107e7565b91505092915050565b60006020820190506108736000830184610608565b92915050565b600080604083850312156108905761088f61059b565b5b600061089e858286016105c6565b925050602083013567ffffffffffffffff8111156108bf576108be6105a0565b5b6108cb858286016107e7565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061094b57607f821691505b6020821081141561095f5761095e610904565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061099f826105a5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156109d2576109d1610965565b5b600182019050919050565b7f5573657220646f6573206e6f7420657869737400000000000000000000000000600082015250565b6000610a13601383610622565b9150610a1e826109dd565b602082019050919050565b60006020820190508181036000830152610a4281610a06565b905091905056fea26469706673582212203f8aacc9bd942cba70fc3afcd83447d4101cc5df551e380af0fe6f9ff601536f64736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 643,
        "contract": "contracts/Crud.sol:Crud",
        "label": "users",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_struct(User)639_storage)dyn_storage"
      },
      {
        "astId": 646,
        "contract": "contracts/Crud.sol:Crud",
        "label": "nextId",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_array(t_struct(User)639_storage)dyn_storage": {
        "base": "t_struct(User)639_storage",
        "encoding": "dynamic_array",
        "label": "struct Crud.User[]",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(User)639_storage": {
        "encoding": "inplace",
        "label": "struct Crud.User",
        "members": [
          {
            "astId": 636,
            "contract": "contracts/Crud.sol:Crud",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 638,
            "contract": "contracts/Crud.sol:Crud",
            "label": "name",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}